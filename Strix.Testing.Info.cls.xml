<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Strix.Testing.Info">
<Description>
This class records information about a testing 'event': a
test failure, an error in setup code, etc.</Description>
<Super>%SerialObject</Super>
<TimeCreated>63861,65757.407765</TimeCreated>

<Property name="Type">
<Description>
The type of info:
Log: a message
Fail: a test fail
Skip: test skipped (optionally with reason)
Error: an error occurred</Description>
<Type>%String</Type>
<Required>1</Required>
<Parameter name="VALUELIST" value=",Log,Fail,Skip,Error"/>
</Property>

<Property name="ClassName">
<Description>
The test class this information is related to</Description>
<Type>%String</Type>
</Property>

<Property name="MethodName">
<Description>
The test method this info is related to</Description>
<Type>%String</Type>
</Property>

<Property name="AssertionType">
<Description>
The type of test that was performed:
Assert[Not]Equal, AssertTrue, AssertFalse, AssertStatusOk, AssertStatusFail</Description>
<Type>%String</Type>
</Property>

<Property name="Expected">
<Description>
Expected result of the test (if appropriate)</Description>
<Type>%String</Type>
</Property>

<Property name="Result">
<Description>
Actual result of the test (if appropriate)</Description>
<Type>%String</Type>
</Property>

<Property name="Description">
<Description>
Description of the test or log line</Description>
<Type>%String</Type>
</Property>

<Property name="Status">
<Description>
The error status for type Error</Description>
<Type>%Status</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// =====

]]></Content>
</UDLText>

<Method name="Get">
<Description>
Contructor for normal info</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Type:%String,ClassName:%String="",MethodName:%String="",AssertionType:%String="",Expected:%String="",Result:%String="",Description:%String=""</FormalSpec>
<ReturnType>Info</ReturnType>
<Implementation><![CDATA[
	Set Me = ..%New()
	Set Me.Type = Type
	Set Me.ClassName = ClassName
	Set Me.MethodName = MethodName
	Set Me.AssertionType = AssertionType
	Set Me.Expected = Expected
	Set Me.Result = Result
	Set Me.Description = Description
	Quit Me
]]></Implementation>
</Method>

<Method name="GetForError">
<Description>
Constructor for error info</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ClassName:%String="",MethodName:%String="",Description:%String="",Status:%Status=""</FormalSpec>
<ReturnType>Info</ReturnType>
<Implementation><![CDATA[
	Set Me = ..%New()
	Set Me.Type = "Error"
	Set Me.ClassName = ClassName
	Set Me.MethodName = MethodName
	Set Me.Description = Description
	Set Me.Status = Status
	Quit Me
]]></Implementation>
</Method>

<Method name="ReportToTerminal">
<Implementation><![CDATA[
	If $X Write !
	
	If ..Type = "Fail" {
		Write ..AssertionType_" failed: "_..Description,!
		
		If $ListFind($ListFromString("AssertEqual,AssertNotEqual,AssertListEqual,AssertListNotEqual,AssertStatusParameter"), ..AssertionType) {
			Set Expected = ..Expected
			Set Result = ..Result
			Write "Expected: ",Expected,!
			Write "Result:   ",Result,!
			
		} ElseIf $ListFind($ListFromString("AssertStatusOk,AssertErrorStatus,AssertTrue,AssertFalse"), ..AssertionType) {
			Write "Got: "_..Result,!
			
		} ElseIf ..AssertionType = "AssertStatusEqual" {
			Write "Status1: "_..Expected,!
			Write "Status2: "_..Result,!
			
		}
		
		Quit
	}
	
	If ..Type = "Skip" {
		Write "  Skipped"_$Select(..Description '= "": ": "_..Description, 1: " (no reason given)"),!
		Quit
	}
	
	If ..Type = "Error" {
		Write "Error: "_..Description,!
		If ..Status '= "", '..Status Write $System.Status.GetErrorText(..Status),!
		Quit
	}
	
	If ..Type = "Log" {
		Write "Message: "_..Description,!
		Quit
	}
	
	;Unrecognised, dump object
	Do $system.OBJ.Dump(##this)
	
	Quit
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// =====

]]></Content>
</UDLText>

<Storage name="Default">
<Type>%Library.CacheSerialState</Type>
<State>InfoState</State>
<StreamLocation>^Strix.Testing.InfoS</StreamLocation>
<Data name="InfoState">
<Value name="1">
<Value>Type</Value>
</Value>
<Value name="2">
<Value>ClassName</Value>
</Value>
<Value name="3">
<Value>MethodName</Value>
</Value>
<Value name="4">
<Value>AssertionType</Value>
</Value>
<Value name="5">
<Value>Expected</Value>
</Value>
<Value name="6">
<Value>Result</Value>
</Value>
<Value name="7">
<Value>Description</Value>
</Value>
<Value name="8">
<Value>Status</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
